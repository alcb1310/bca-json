// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	types "github.com/alcb1310/bca-json/internals/types"
	mock "github.com/stretchr/testify/mock"
)

// Service is an autogenerated mock type for the Service type
type Service struct {
	mock.Mock
}

type Service_Expecter struct {
	mock *mock.Mock
}

func (_m *Service) EXPECT() *Service_Expecter {
	return &Service_Expecter{mock: &_m.Mock}
}

// CreateCompany provides a mock function with given fields: company, user
func (_m *Service) CreateCompany(company *types.Company, user *types.CreateUser) error {
	ret := _m.Called(company, user)

	if len(ret) == 0 {
		panic("no return value specified for CreateCompany")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*types.Company, *types.CreateUser) error); ok {
		r0 = rf(company, user)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Service_CreateCompany_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateCompany'
type Service_CreateCompany_Call struct {
	*mock.Call
}

// CreateCompany is a helper method to define mock.On call
//   - company *types.Company
//   - user *types.CreateUser
func (_e *Service_Expecter) CreateCompany(company interface{}, user interface{}) *Service_CreateCompany_Call {
	return &Service_CreateCompany_Call{Call: _e.mock.On("CreateCompany", company, user)}
}

func (_c *Service_CreateCompany_Call) Run(run func(company *types.Company, user *types.CreateUser)) *Service_CreateCompany_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*types.Company), args[1].(*types.CreateUser))
	})
	return _c
}

func (_c *Service_CreateCompany_Call) Return(_a0 error) *Service_CreateCompany_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *Service_CreateCompany_Call) RunAndReturn(run func(*types.Company, *types.CreateUser) error) *Service_CreateCompany_Call {
	_c.Call.Return(run)
	return _c
}

// CreateTables provides a mock function with given fields:
func (_m *Service) CreateTables() {
	_m.Called()
}

// Service_CreateTables_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateTables'
type Service_CreateTables_Call struct {
	*mock.Call
}

// CreateTables is a helper method to define mock.On call
func (_e *Service_Expecter) CreateTables() *Service_CreateTables_Call {
	return &Service_CreateTables_Call{Call: _e.mock.On("CreateTables")}
}

func (_c *Service_CreateTables_Call) Run(run func()) *Service_CreateTables_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Service_CreateTables_Call) Return() *Service_CreateTables_Call {
	_c.Call.Return()
	return _c
}

func (_c *Service_CreateTables_Call) RunAndReturn(run func()) *Service_CreateTables_Call {
	_c.Call.Return(run)
	return _c
}

// NewService creates a new instance of Service. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewService(t interface {
	mock.TestingT
	Cleanup(func())
}) *Service {
	mock := &Service{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
